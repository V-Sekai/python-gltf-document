name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          # Exclude some combinations to reduce matrix size
          - python-version: "3.8"
            os: macos-latest
          - python-version: "3.12"
            os: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for proper git operations
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Install Slash testing framework
        run: |
          pip install slash

      - name: Run basic import test
        run: |
          python -c "from gltf_module import GLTFDocument, GLTFState; print('Basic import test passed')"

      - name: Run comprehensive compatibility tests (limited)
        run: |
          python run_gltf_tests.py --framework comprehensive --max-files 5
        continue-on-error: true

      - name: Run Slash unit tests
        run: |
          python tests/run_tests.py
        continue-on-error: true

      - name: Generate test report
        run: |
          echo "Test execution completed" > test_report.txt
          echo "Python version: ${{ matrix.python-version }}" >> test_report.txt
          echo "OS: ${{ matrix.os }}" >> test_report.txt
          date >> test_report.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}-${{ matrix.os }}
          path: |
            test_report.txt
            gltf_compatibility_report.json
          retention-days: 30

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Run flake8
        run: |
          flake8 gltf_module/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        continue-on-error: true

      - name: Check code formatting with black
        run: |
          black --check --diff gltf_module/ tests/
        continue-on-error: true

      - name: Check import sorting with isort
        run: |
          isort --check-only --diff gltf_module/ tests/
        continue-on-error: true

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Generate summary report
        run: |
          echo "# GLTF Module CI Test Summary" > summary.md
          echo "" >> summary.md
          echo "## Test Results" >> summary.md
          echo "" >> summary.md

          # Count successful test runs
          test_count=$(find artifacts/ -name "test-results-*" -type d | wc -l)
          echo "- **Test Matrix Combinations:** $test_count" >> summary.md

          # Check if all required jobs passed
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "- **Core Tests:** PASSED" >> summary.md
          else
            echo "- **Core Tests:** FAILED" >> summary.md
          fi

          if [ "${{ needs.lint.result }}" == "success" ]; then
            echo "- **Code Quality:** PASSED" >> summary.md
          else
            echo "- **Code Quality:** ISSUES FOUND" >> summary.md
          fi

          echo "" >> summary.md
          echo "## Supported Features" >> summary.md
          echo "" >> summary.md
          echo "- GLTF 2.0 JSON format parsing" >> summary.md
          echo "- Scene generation and hierarchy" >> summary.md
          echo "- Material and texture support" >> summary.md
          echo "- Animation and skinning" >> summary.md
          echo "- Round-trip export validation" >> summary.md
          echo "- Comprehensive test suite" >> summary.md
          echo "" >> summary.md
          echo "## Performance Targets" >> summary.md
          echo "" >> summary.md
          echo "- **Load Time:** < 100ms for small files" >> summary.md
          echo "- **Scene Gen:** < 1s for complex models" >> summary.md
          echo "- **Compatibility:** 200+ GLTF files" >> summary.md

          cat summary.md

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: ci-summary
          path: summary.md
          retention-days: 30
